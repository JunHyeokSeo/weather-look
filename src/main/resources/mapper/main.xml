<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main">

	<select id="mainlist" parameterType="search"
		resultType="mainboard">
		select r2.*, nvl(likes_count,0)likes from
		(select type_id, post_id, reg_date, title, nick from(
		select rownum rnum, r1.* from(
		select type_id, post_id, reg_date, title, nick from daily
		union
		select type_id, post_id, reg_date, title, nick from review
		order by reg_date desc) r1
		) where rnum &gt;= #{startrow} and rnum &lt;= #{endrow} ) r2
		left join
		(select type_id, post_id, count(*) likes_count from likes group by type_id,
		post_id) l1
		on
		r2.type_id = l1.type_id and r2.post_id = l1.post_id
	</select>
	
	<select id="maincount" parameterType="search" resultType="int">
	select count(*) listcount from
            (select type_id, post_id, reg_date, title, nick from daily
                union
                select type_id, post_id, reg_date, title, nick from review
                order by reg_date desc)
	</select>
	
	<select id="searchlist" parameterType="search" resultType="searchresult">
		select s2.*, board_type.type_name type_name, nvl(likes.likes_count,0) likes, nvl(scraps.scraps_count,0) scraps from
    (select type_id, post_id, reg_date, title, nick, read_count from
        (select rownum rnum, s1.* from
            (select type_id, post_id, reg_date, title, nick, read_count from daily
                union
                select type_id, post_id, reg_date, title, nick, read_count from review
                union 
                select type_id, post_id, reg_date, title, nick, read_count from community
                order by reg_date desc) s1)
            where rnum &gt;= #{startrow} and rnum &lt;= #{endrow} ) s2
left join
board_type
on
s2.type_id = board_type.type_id
left join
(select type_id, post_id, count(*) likes_count from likes group by type_id, post_id) likes
on
s2.type_id = likes.type_id and s2.post_id = likes.post_id
left join
(select type_id, post_id, count(*) scraps_count from scrap group by type_id, post_id) scraps
on
s2.type_id = scraps.type_id and s2.post_id = scraps.post_id
	</select>
	
	<select id = "searchcount" parameterType="search" resultType = "int">
	select count(*) listcount from
            (select type_id, post_id, reg_date, title, nick from daily
                union
                select type_id, post_id, reg_date, title, nick from review
                union 
                select type_id, post_id, reg_date, title, nick from community
                order by reg_date desc)
	</select>

<select id="weather" parameterType="search" resultType="mainboard">

select * from daily where temperature &gt;= (#{weather.temperature}-5) and temperature &lt;= (#{weather.temperature}+5)

</select>

</mapper>







