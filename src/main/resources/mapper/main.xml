<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main">

	<select id="mainlist" parameterType="search"
		resultType="mainboard">
		select * from
		(select rownum rnum, m1.* from
		(select 'daily'
		as type_name, post_id, title, reg_date from daily
		union
		select 'review' as
		type_name, post_id, title, reg_date from review
		order by reg_date desc) m1)
		where rnum &gt;= #{startrow} and rnum &lt;= #{endrow}
	</select>

	<select id="maincount" parameterType="search" resultType="int">
		select
		count(*) maincount from
		(select 'daily' as type_name, post_id, title,
		reg_date from daily
		union
		select 'review' as type_name, post_id, title,
		reg_date from review
		order by reg_date desc)
	</select>

	<select id="searchlist" parameterType="search"
		resultType="searchresult">
		select 'daily' as type_name, title, post_id, nick, reg_date from daily
		<where>
			<if test="keyword != null and keyword != ''">
				AND (nick LIKE '%' || #{keyword} || '%' OR title LIKE '%'
				|| #{keyword}
				|| '%' OR content LIKE '%' || #{keyword} || '%')
			</if>
		</where>
		union
		select 'review' as type_name, title, post_id, nick, reg_date from review
		<where>
			<if test="keyword != null and keyword != ''">
				AND (nick LIKE '%' || #{keyword} || '%' OR title LIKE '%'
				|| #{keyword}
				|| '%' OR content LIKE '%' || #{keyword} || '%')
			</if>
		</where>
		union
		select 'community' as type_name, title, post_id, nick, reg_date from
		community
		<where>
			<if test="keyword != null and keyword != ''">
				AND (nick LIKE '%' || #{keyword} || '%' OR title LIKE '%'
				|| #{keyword}
				|| '%' OR content LIKE '%' || #{keyword} || '%')
			</if>
		</where>
		order by reg_date
	</select>

	<select id="searchcount" parameterType="search" resultType="int">
		select count(*) searchcount from
		(select 'daily' as type_name, title, post_id, nick, reg_date from daily
		<where>
			<if test="keyword != null and keyword != ''">
				AND (nick LIKE '%' || #{keyword} || '%' OR title LIKE '%'
				|| #{keyword}
				|| '%' OR content LIKE '%' || #{keyword} || '%')
			</if>
		</where>
		union
		select 'review' as type_name, title, post_id, nick, reg_date from review
		<where>
			<if test="keyword != null and keyword != ''">
				AND (nick LIKE '%' || #{keyword} || '%' OR title LIKE '%'
				|| #{keyword}
				|| '%' OR content LIKE '%' || #{keyword} || '%')
			</if>
		</where>
		union
		select 'community' as type_name, title, post_id, nick, reg_date from
		community
		<where>
			<if test="keyword != null and keyword != ''">
				AND (nick LIKE '%' || #{keyword} || '%' OR title LIKE '%'
				|| #{keyword}
				|| '%' OR content LIKE '%' || #{keyword} || '%')
			</if>
		</where>
		order by reg_date)
	</select>

<!-- 상위 복구 완료 지점 -->

	<select id="weather" parameterType="search"
		resultType="mainboard">

		select * from daily where temperature &gt;=
		(#{weather.temperature}-5) and
		temperature &lt;=
		(#{weather.temperature}+5)

	</select>

	<select id="reportlist" parameterType="search"
		resultType="report">

		select reports.* , board_type.type_name type_name from
		(select report.report_id, report.reason, d.type_id, d.post_id, d.title
		from
		report, daily d
		where d.type_id = report.type_id and d.post_id =
		report.post_id
		union
		select report.report_id, report.reason, r.type_id,
		r.post_id, r.title from
		report, review r
		where r.type_id =
		report.type_id and r.post_id = report.post_id
		union
		select
		report.report_id, report.reason, c.type_id, c.post_id, c.title from
		report, community c
		where c.type_id = report.type_id and c.post_id =
		report.post_id
		order by report_id desc) reports, board_type
		where
		reports.type_id = board_type.type_id
		order by report_id desc

	</select>

	<select id="reportcount" parameterType="search" resultType="int">
		select count(*) reports from
		(select report.report_id,report.reason,
		d.type_id, d.post_id, d.title from
		report, daily d
		where d.type_id =
		report.type_id and d.post_id = report.post_id
		union
		select
		report.report_id,report.reason, r.type_id, r.post_id, r.title from
		report, review r
		where r.type_id = report.type_id and r.post_id =
		report.post_id
		union
		select report.report_id,report.reason, c.type_id,
		c.post_id, c.title from
		report, community c
		where c.type_id =
		report.type_id and c.post_id = report.post_id
		order by report_id desc)
	</select>


</mapper>







