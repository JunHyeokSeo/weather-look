<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myPage">
	<!--전체 글 개수-->
	<select id="count" resultType="int">
		with allpost as (select POST_ID, TITLE, READ_COUNT, REG_DATE, CONTENT, NICK
		                 from DAILY
		                 union
		                 select POST_ID, TITLE, READ_COUNT, REG_DATE, CONTENT, NICK
		                 from REVIEW
		                 union
		                 select POST_ID, TITLE, READ_COUNT, REG_DATE, CONTENT, NICK
		                 from COMMUNITY)
		select count(*)
		from allpost
		where NICK like '%준혁%'
	</select>

	<!--작성글 목록-->
	<select id="post_list" parameterType="String" resultType="Board">
		with allpost as (select POST_ID, TITLE, READ_COUNT, REG_DATE, CONTENT, NICK
		                 from DAILY
		                 union
		                 select POST_ID, TITLE, READ_COUNT, REG_DATE, CONTENT, NICK
		                 from REVIEW
		                 union
		                 select POST_ID, TITLE, READ_COUNT, REG_DATE, CONTENT, NICK
		                 from COMMUNITY)
		select *
		from allpost
		where NICK = #{nick}
		order by REG_DATE desc
	</select>

	<!--작성 댓글 목록-->
	<select id="comment_list" parameterType="String" resultType="Comment">
		with allcomment as (select *
		                    from DAILY_REPLY
		                    union
		                    select *
		                    from REVIEW_REPLY
		                    union
		                    select *
		                    from COMMUNITY_REPLY)
		select *
		from allcomment
		where NICK = #{nick}
		order by RE_REGDATE desc
	</select>

	<!--유저 객체 얻어오기-->
	<select id="get_member" parameterType="String" resultType="Member">
		select *
		from MEMBER
		where NICK = #{nick}
	</select>

	<!--좋아요 목록-->
	<select id="like_list" parameterType="String" resultType="Like">
		with myLike as (select *
		                from LIKES
		                where NICK = #{nick}),
		     allLike as (select myLike.LIKE_ID, myLike.POST_ID, myLike.TYPE_ID, DAILY.TITLE, DAILY.NICK as writer_nick
		                 from myLike,
		                      DAILY
		                 where myLike.POST_ID = DAILY.POST_ID
			               and myLike.TYPE_ID = DAILY.TYPE_ID
		                 union
		                 select myLike.LIKE_ID, myLike.POST_ID, myLike.TYPE_ID, REVIEW.TITLE, REVIEW.NICK as writer_nick
		                 from myLike,
		                      REVIEW
		                 where myLike.POST_ID = REVIEW.POST_ID
			               and myLike.TYPE_ID = REVIEW.TYPE_ID
		                 union
		                 select myLike.LIKE_ID, myLike.POST_ID, myLike.TYPE_ID, COMMUNITY.TITLE, COMMUNITY.NICK as writer_nick
		                 from myLike,
		                      COMMUNITY
		                 where myLike.POST_ID = COMMUNITY.POST_ID
			               and myLike.TYPE_ID = COMMUNITY.TYPE_ID)
		select *
		from allLike
		order by LIKE_ID desc
	</select>

	<!--스크랩 목록-->
	<select id="scrap_list" parameterType="String" resultType="Scrap">
		with myScrap as (select *
		                from SCRAP
		                where NICK = #{nick}),
		     allScrap as (select myScrap.SCRAP_ID, myScrap.POST_ID, myScrap.TYPE_ID, DAILY.TITLE, DAILY.NICK as writer_nick
		                 from myScrap,
		                      DAILY
		                 where myScrap.POST_ID = DAILY.POST_ID
			               and myScrap.TYPE_ID = DAILY.TYPE_ID
		                 union
		                 select myScrap.SCRAP_ID, myScrap.POST_ID, myScrap.TYPE_ID, REVIEW.TITLE, REVIEW.NICK as writer_nick
		                 from myScrap,
		                      REVIEW
		                 where myScrap.POST_ID = REVIEW.POST_ID
			               and myScrap.TYPE_ID = REVIEW.TYPE_ID
		                 union
		                 select myScrap.SCRAP_ID, myScrap.POST_ID, myScrap.TYPE_ID, COMMUNITY.TITLE, COMMUNITY.NICK as writer_nick
		                 from myScrap,
		                      COMMUNITY
		                 where myScrap.POST_ID = COMMUNITY.POST_ID
			               and myScrap.TYPE_ID = COMMUNITY.TYPE_ID)
		select *
		from allScrap
		order by SCRAP_ID desc
	</select>
</mapper>








